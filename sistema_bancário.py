# -*- coding: utf-8 -*-
"""Sistema Bancário

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CvtzuV2PxsiJm-nDmmcSpSd_X9qijX3o

Sistema Bancário

Criar uma lógica para simular um fluxo de um sistema bancário!
Este **Programa deverá ter**:


1.   Um menu com seleção de operação
2.   Criação de contas
3.   Remoção de contas
4.   Listagem de todas contas criadas
5.   Adicionar saldo/remover saldo
6.   Transferir valor entre contas
7.   Consultar saldo de uma conta especifica

As contas devem ser armazenadas em uma lista e cada conta deve ser um dicionário (chave-valor) contendo as seguintes chaves:
 1.  numero_conta
 2.  saldo_conta
"""

contas = []

def criar_conta():
  verificador_conta_existe = False
  dados_nova_conta = {}
  dados_nova_conta['numero_conta'] = input(' Digite um número da nova conta :\n>>> ')

  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == dados_nova_conta['numero_conta']:
      verificador_conta_existe = True
      break

  if verificador_conta_existe == True:
     print('\n O número da conta ja existe. Tente novamente')

  else:
    dados_nova_conta['saldo_conta'] = float(input('Digite o saldo da nova conta:\n>>> '))
    contas.append(dados_nova_conta)
    print('\n Operação realizada com sucesso.')

def remover_conta():
 numero_conta = input(' Digite o número da conta para remover \n>> > ')
 conta_em_consulta = False
 for consulta_em_contas in contas:
  if conta_em_consulta['numero_conta'] == numero_conta:
   conta_encontrada = True
   conta.remove(conta_consulta)
   print('\n Operação efetuada com sucesso.')
   break
 if not conta_encontrada:
   print('\n O número da conta não existe. Tente novamente!')

def listar_contas():
  if len(contas) == 0:
   print('\n Não há contas cadastradas.')
  else:
    index = 1
    for conta_em_consulta in contas:
      if conta_em_consulta['saldo_conta'] >0:
        status = 'Positivo'
      else:
        status = 'negativo'
      print(f'{index}- Número da conta: {conta_em_consulta["numero_conta"]} | Saldo da conta: R$ {conta_em_consulta["saldo_conta"]:.2f} ({status})')
      index += 1

def adicionar_saldo():
  numero_conta = input ('Digite o número da conta:\n>>>>>> ')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
     valor_credito = float(input('Digite o valor do crédito:\n>>> R$ '))
     if valor_credito < 0:
      print('Valores negativos não são aceitos. Tente novamente!')
      return
    else:
       conta_em_consulta ['saldo_conta'] += valor_credito
       print( '\n Operação efetuada com sucesso!')
       return
  print('\nO número da conta não foi encontarda. Tente novamente!')

def remover_saldo():
  numero_conta = input ('Digite o número da conta:\n>>>>>> ')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
     valor_débito = float(input('Digite o valor do débito:\n>>> R$ '))
    if valor_débito < 0:
      print('Valores negativos não são aceitos. Tente novamente!')
      return
    else:
      conta_em_consulta ['saldo_conta'] -= valor_débito
      print( '\n Operação efetuada com sucesso!')
      return
  print('\nO número da conta não foi encontarda. Tente novamente!')

def tranferir_saldo():
  conta_partida = input('Digite o número da sua conta \n>>> ')
  verificador_etapa = 0
# Procurar a primeira conta
  for conta_em_consulta in contas:
     if conta_em_consulta['numero_conta'] == conta_partida:
      verificador_etapa = 1
      conta_destino = input('Digite o número da conta destino ')
      # Verifica se a tranferencia é para mesma conta
      if conta_destino != conta_partida:
        # Procura Segunda conta
        for conta_destino_em_consulta in contas:
          if conta_destino_em_consulta['numero_conta'] == conta_destino:
             verificador_etapa = 3
             valor_transferencia = float(input('Digite o valor que será tranferido \n>>> R$ '))
               # Verifica se osaldo é negativo
             if valor_transferencia < 0:
                print('\nNão é possível tranferir um valor negativo')
                break
               # Verifica se o saldo é sulficiente
             elif valor_tranferencia > conta_em_consulta['saldo_conta']:
                 print('\nNão é possível tranferir saldo maior que o seu saldo')
                 break
             else:
                conta_em_consulta['saldo_conta'] -= valor_tranferencia
                conta_destino_em_consulta['saldo_conta'] += valor_tranferencia
                print('\nOperaçaõ efetuada com sucesso! ')
                break

          print()
        else:
         verificador_etapa = 2
         break

  if verificador_etapa == 0:
    print('\nA sua conta não foi encontrada. Tente novamente')
  elif verificador_etapa == 1:
    print('\nA conta destino não foi encontrada. Tente novamente')
  elif verificador_etapa == 2:
    print('\nNão é possível tranferir saldo para mesma conta.')

def consultar_saldo():
  numero_conta = input('Digite o número da conta para consultar o saldo\n>>>>')
  for conta_em_consulta in contas:
    if conta_em_consulta['numero_conta'] == numero_conta:
     if conta_em_consulta['saldo_conta'] >0:
         status = 'Positivo'
     else:
        status = 'negativo'
    print(f"\nO saldo é: R${conta_em_consulta['saldo_conta']:.2f} ({status})")
    return
  print('O número da conta não foi encontrado. Tente Novamente')



print(' Seja bem-Vindo ao nosso sistema bancário!! ')


while True:
  print('\n     Menu ')
  print('0 - Sair.')
  print('1 - Criar uma nova conta.')
  print('2 - Remover conta')
  print('3 - Lista todas as contas')
  print('4 - Adicionar saldo (creditar)')
  print('5 - Remover saldo (Debitar)')
  print('6 - Transferir valor entre contas')
  print('7 - Consultar saldo de uma  conta')
  numero_operacao = input('Selecione a operação que deseja realizar: \n>>>> ')

  if numero_operacao == '0':
    print('\n Sistema encerrado ')
    break

# Operação 1 -  Criar conta
  elif numero_operacao == '1':
   criar_conta()

# Operação 2 - Remover conta
  elif numero_operacao == '2':
    remover_conta()

# Operação 3 - Listar contas
  elif numero_operacao == '3':
    listar_contas()

# Operação 4 - Adicionar Saldo
  elif numero_operacao == '4':
    adicionar_saldo()

# Operação 5 - Remover Saldo
  elif numero_operacao == '5':
     remover_saldo()

# Operação 6 - Transferir valor entre contas
  elif numero_operacao == '6':
     transferir_saldo()

# Operação 7 - Consultar saldo de uma conta
  elif numero_operacao == '7':
     consultar_saldo()

# Operação Inválida
  else:
   print('\n Operação invalida! ')